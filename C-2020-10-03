#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>
#include <string.h>

int main(){

	int a = 10;
	int b = 20;
	int max = 0;

	max = (a > b ? a : b);
	// 条件操作符→操作数1？操作数2：操作数3（条件 ？ 成立：不成立）

	//if (a > b){
	//	max = a;
	//}
	//else{
	//	max = b;
	//}
	printf("max=%d\n", max);

	return 0;
}

//int main(){
//	//C语言  0表示假 非0表示真
//	//&&--逻辑与
//	int a = 0;
//	int b = 5;
//	int c = a&&b; //真&&真=1  假&&真=0 假&&假=0
//	int d = a || b;//只要有一个真则为真，即=1
//	printf("c=%d\n", c);
//	printf("d=%d\n", d);
//
//	return 0;
//}

//int main(){
//
//	int a = 10;
//	int b = a++;//后置++，先使用，再++
//	int c = ++a;//后置++,先++，在使用
//	printf("a=%d b=%d c=%d\n", a, b,c);
//
//	return 0;
//}

//int main(){
//
//	int a = 0;//4个四届，32个bit位
//	int b = ~a;//b是有符号的整形
//	//~ 表示 按（2进制）位取反
//	//00000000000000000000000000000000    首位是0表示正数，是1表示负数
//	//11111111111111111111111111111111    负数内存中存储的是补码
//	//原码、反码、补码
//	//原码符号位不变，其他位按位取反，得到反码。反码+1得到补码。
//	//负数在内存中存储的时候，存储的是二进制的补码！
//	//11111111111111111111111111111111
//	//11111111111111111111111111111110
//	//10000000000000000000000000000001      -1
//
//	printf("%d\n",b);//使用的，打印的是这个数的原码
//	return 0;
//}


//int Max(int a, int b){
//	if (a<b)
//	{
//		return b;
//	}
//	else
//	{
//		return a;
//	}
//}
//int main(){
//	int num1 = 0;
//	int num2 = 0;
//	scanf("%d%d", &num1, &num2);
//	int max = Max(num1, num2); 函数调用操作符
//	printf("%d\n", max);
//	return 0;
//}
